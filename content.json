{"meta":{"title":"黄某人のBlog_(:3」∠)_","subtitle":null,"description":"心之所愿，无所不成","author":"Han$on Huang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-08-18T09:52:21.000Z","updated":"2019-08-18T09:53:36.231Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2019-08-18T10:22:41.000Z","updated":"2019-08-18T10:33:43.904Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"记录分享技术上遇到的困难~Hanson，每天一步一步努力中… 热爱poppin与dota，目前是一枚小小前端人 猪猪の卯，先谢郭嘉，心之所愿，无所不成。"},{"title":"tags","date":"2019-08-18T09:57:36.000Z","updated":"2019-08-18T09:57:52.836Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"如何往Github上传自己的项目","slug":"如何往Github上传自己的项目","date":"2019-08-18T09:11:45.000Z","updated":"2019-08-18T10:04:26.597Z","comments":true,"path":"2019/08/18/如何往Github上传自己的项目/","link":"","permalink":"http://yoursite.com/2019/08/18/如何往Github上传自己的项目/","excerpt":"Step 1.进入本地目录利用GitBash cd进入当前项目文件地址，可以通过pwd检测","text":"Step 1.进入本地目录利用GitBash cd进入当前项目文件地址，可以通过pwd检测 Step 2.建立git仓库输入git init，成功的标志就是该目录下会多一个.git的隐藏文件夹 Step 3.将文件添加到仓库git add 指定文件名 或git add –all 将所有的文件全部添加 Step 4.将文件提交注释git commit -m “修改说明”，可以通过git status查看状态检查是否成功 Step 5.将本地仓库关联到github并上传12关联：git remote add origin 仓库SSH地址上传：git push -u origin master","categories":[],"tags":[{"name":"新手向","slug":"新手向","permalink":"http://yoursite.com/tags/新手向/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"}]},{"title":"Markdown基本语法","slug":"Markdown基本语法","date":"2019-08-17T02:09:08.000Z","updated":"2019-08-18T10:01:45.771Z","comments":true,"path":"2019/08/17/Markdown基本语法/","link":"","permalink":"http://yoursite.com/2019/08/17/Markdown基本语法/","excerpt":"Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。优点：1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。2、操作简单。缺点：1、需要记一些语法（当然，是很简单。五分钟学会）。2、部分平台不支持Markdown编辑模式。","text":"Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。优点：1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。2、操作简单。缺点：1、需要记一些语法（当然，是很简单。五分钟学会）。2、部分平台不支持Markdown编辑模式。 一、标题在想要设置为标题的文字前面加#来表示一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 效果如下： 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题二、字体 加粗要加粗的文字左右分别用两个*号包起来 斜体要倾斜的文字左右分别用一个*号包起来 斜体加粗要倾斜和加粗的文字左右分别用三个*号包起来 删除线要加删除线的文字左右分别用两个~~号包起来 1234**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~ 效果如下：这是加粗的文字这是倾斜的文字`这是斜体加粗的文字这是加删除线的文字 三、引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt; 123&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 效果如下： 这是引用的内容 这是引用的内容 这是引用的内容 四、分割线三个或者三个以上的 - 或者 * 都可以。 1234-------******** 效果如下： 五、图片1![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加示例： 1![f7a28c0e8391526a6d002ebce8d76841.jpg](https://ww1.yunjiexi.club/2019/08/17/f7a28c0e8391526a6d002ebce8d76841.jpg) 效果如下： 六、超链接1234[超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加[百度](http://baidu.com) 效果如下：百度注：Markdown本身语法不支持链接在新页面中打开，有些平台做了处理，是可以的。如果想要在新页面中打开的话可以用html语言的a标签代替。 123&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;示例&lt;a href=&quot;https://hy530845826.github.io&quot; target=&quot;_blank&quot;&gt;我的blog&lt;/a&gt; 七、列表 无序列表1234无序列表用 - + * 任何一种都可以- 列表内容+ 列表内容* 列表内容 效果如下： 列表内容 列表内容 列表内容 有序列表1234数字加点1. 列表内容2. 列表内容3. 列表内容 效果如下： 列表内容 列表内容 列表内容 列表嵌套上一级和下一级之间敲三个空格即可1234567+ 一级无序列表内容 1. 二级无序列表内容 3. 二级无序列表内容1. 一级无序列表内容 + 二级有序列表内容 + 二级有序列表内容 效果如下： 一级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 二级有序列表内容 二级有序列表内容 八、表格12345678910表头|表头|表头- |: - :| -:内容|内容|内容内容|内容|内容第二行分割表头和内容。-文字默认居左-表示文字居中-文字居右-注：原生的语法两边都要用 | 包起来。此处省略 九、代码单行代码：代码之间分别用一个反引号包起来 1`代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 1234567(```) 代码... 代码... 代码...(```)注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。 效果如下：单行代码create database hero;代码块 1234function fun()&#123; echo &quot;这是一句非常牛逼的代码&quot;;&#125;fun(); 十、流程图123456789flowst=&gt;start: 开始op=&gt;operation: My Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op&amp; 效果如下： 原文转自以下链接，自己稍作更正修改。链接：https://www.jianshu.com/p/191d1e21f7ed作者：高鸿祥来源：简书","categories":[],"tags":[{"name":"新手向","slug":"新手向","permalink":"http://yoursite.com/tags/新手向/"},{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]},{"title":"next主题上传github.io界面样式无效","slug":"next主题上传github.io界面样式无效","date":"2019-08-16T09:57:25.000Z","updated":"2019-08-18T10:04:09.843Z","comments":true,"path":"2019/08/16/next主题上传github.io界面样式无效/","link":"","permalink":"http://yoursite.com/2019/08/16/next主题上传github.io界面样式无效/","excerpt":"问题描述本地部署后的图片和背景动画，通过hexo d上传至github后，不会加载显示图片和背景动画？","text":"问题描述本地部署后的图片和背景动画，通过hexo d上传至github后，不会加载显示图片和背景动画？ 解决方法尝试性解决？进入/next/source，将其中的lib文件的名字改成其他名字（例：qwe）然后打开/next中的_config.yml，将# Script Vendors.中的_internal: lib修改为_internal: qwe重新在GitBash中输入 123hexo cleanhexo ghexo d 打开博客主页，清理缓存刷新，搞定","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"next主题","slug":"next主题","permalink":"http://yoursite.com/tags/next主题/"}]},{"title":"babel导致webpack打包错误","slug":"babel导致webpack打包错误","date":"2019-08-16T05:37:15.000Z","updated":"2019-08-18T10:03:27.816Z","comments":true,"path":"2019/08/16/babel导致webpack打包错误/","link":"","permalink":"http://yoursite.com/2019/08/16/babel导致webpack打包错误/","excerpt":"问题描述利用npm run bulid进行打包时，抛出Error: Cannot find module ‘@babel/core’&amp;&amp;Cannot find module ‘@babel/plugin-transform-react-jsx’问题发生的首先想到的是webpack.config.js配置环境有误，但反复核对后发现无误观察之中发现视频中的版本的babel-loader之前的版本是@7.1.5,而现在是@8.0.6","text":"问题描述利用npm run bulid进行打包时，抛出Error: Cannot find module ‘@babel/core’&amp;&amp;Cannot find module ‘@babel/plugin-transform-react-jsx’问题发生的首先想到的是webpack.config.js配置环境有误，但反复核对后发现无误观察之中发现视频中的版本的babel-loader之前的版本是@7.1.5,而现在是@8.0.6 解决方法尝试性解决？首先进行尝试性的方法，试试安装@7.1.5版本的babel-loader（回退版本）后会有什么效果 1cnpm i babel-loader@7.1.5 安装完成后，再在终端输入 1npm run bulid 居然完全能运行成功 寻找问题的根源所在？根据官方文档所示：官方默认babel-loader | babel 对应的版本需要一致 解决问题！直接安装最新版本（对应）的babel-loader和babel 1npm install -D babel-loader @babel/core @babel/preset-env webpack 这时候查看jason发现版本匹配，再尝试一下webpack打包，哇塞？成功解决","categories":[],"tags":[{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"},{"name":"webpack","slug":"webpack","permalink":"http://yoursite.com/tags/webpack/"},{"name":"babel","slug":"babel","permalink":"http://yoursite.com/tags/babel/"}]}]}